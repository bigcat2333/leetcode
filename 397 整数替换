（题目描述）给定一个正整数 n，你可以做如下操作：

1. 如果 n 是偶数，则用 n / 2替换 n。
2. 如果 n 是奇数，则可以用 n + 1或n - 1替换 n。
n 变为 1 所需的最小替换次数是多少？
例：input 8 output 3
    8->4->2->1

（思考过程）
1.偶数比较好判断，这道题的重点应放在对于奇数的最优选择操作上
2.要求输出值为1 根据题目判断出，输出为1，应尽可能得到2
3.一个奇数加1或减1都为偶数，但要求这个偶数尽可能离2近，也就是所得结果一直都为偶数，自然会除到2
      （（n+1)/2）%2==0 （ (n-1)/2）%2！=0
4.但是还有一种情况，即n-1==2：
考虑到上述这些情况


class Solution(object):
    def integerReplacement(self, n):
        """
        :type n: int
        :rtype: int
        """
        t=0
        while n!= 1:
            if n % 2 == 0:
                n = n/2
                
            elif ((n+1)/2)%2==0 and ((n-1)/2)%2!=0 and ((n-1)/2)!=1:
                n = n+1
            else:
                n = n-1
            t+=1
        return t
